{"version":3,"sources":["components/Timer.js","components/TimerControl.js","components/SessionTimeControl.js","components/BreakTimeControl.js","components/PomodoroClockApp.js","index.js"],"names":["Timer","_Component","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","convertTimeFormat","time","minutes","Math","floor","seconds","minutesStr","secondsStr","inherits","createClass","key","value","timerLabel","props","isOnBreak","timeRemaining","react_default","a","createElement","id","preload","src","Component","TimerControl","startStopText","isPaused","startStopIconClass","_this$props$controlMe","controlMethods","togglePause","reset","className","onClick","SessionTimeControl","increment","decrement","sessionLength","BreakTimeControl","breakLength","DEFAULT_SESSION_LENGTH","DEFAULT_BREAK_LENGTH","MIN_LENGTH","MAX_LENGTH","PomodoroClockApp","tick","state","setState","beepClip","pause","currentTime","toggleBreak","timerControlMethods","incrementSessionLength","min","updateSessionLength","decrementSessionLength","max","incrementBreakLength","updateBreakLength","decrementBreakLength","sessionMethods","breakMethods","_this2","document","querySelector","timer","setInterval","clearInterval","play","components_Timer","components_BreakTimeControl","components_SessionTimeControl","components_TimerControl","ReactDOM","render","components_PomodoroClockApp","getElementById"],"mappings":"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","file":"static/js/main.88c86903.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nexport class Timer extends Component {\n  /**\n   * Convert a time value from seconds to MM:SS format\n   */\n  convertTimeFormat = time => {\n    const minutes = Math.floor(time / 60);\n    const seconds = time % 60;\n    const minutesStr = minutes < 10 ? `0${minutes}` : `${minutes}`;\n    const secondsStr = seconds < 10 ? `0${seconds}` : `${seconds}`;\n    return `${minutesStr}:${secondsStr}`;\n  };\n\n  /**\n   * Render the component\n   */\n  render() {\n    const timerLabel = this.props.isOnBreak ? 'Break' : 'Session';\n    const timeRemaining = this.props.timeRemaining;\n    return (\n      <div id='timer-container'>\n        <div id='timer-label'>\n          <h3>{timerLabel}</h3>\n        </div>\n        <div id='time-left'>{this.convertTimeFormat(timeRemaining)}</div>\n        <audio id='beep' preload='auto' src='./audio/BeepSound.wav' />\n      </div>\n    );\n  }\n}\n\nTimer.propTypes = {\n  timeRemaining: PropTypes.number.isRequired,\n  isOnBreak: PropTypes.bool.isRequired\n};\n\nexport default Timer;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nexport class TimerControl extends Component {\n  render() {\n    const startIconClassName = 'far fa-play-circle';\n    const stopIconClassName = 'far fa-stop-circle';\n    const resetIconClassName = 'fa fa-sync btn-icon';\n\n    const startStopText = this.props.isPaused ? 'Start ' : 'Stop ';\n    const startStopIconClass =\n      (this.props.isPaused ? startIconClassName : stopIconClassName) +\n      ' btn-icon';\n\n    const { togglePause, reset } = this.props.controlMethods;\n\n    return (\n      <div id='timer-controls'>\n        <button\n          className='timer-control-button'\n          id='start_stop'\n          onClick={togglePause}\n        >\n          {startStopText}\n          <i className={startStopIconClass} />\n        </button>\n        <button className='timer-control-button' id='reset' onClick={reset}>\n          Reset <i className={resetIconClassName} />\n        </button>\n      </div>\n    );\n  }\n}\n\nTimerControl.propTypes = {\n  controlMethods: PropTypes.object.isRequired,\n  isPaused: PropTypes.bool.isRequired\n};\n\nexport default TimerControl;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nexport class SessionTimeControl extends Component {\n  render() {\n    const { increment, decrement } = this.props.controlMethods;\n\n    return (\n      <div className='length-control-container' id='session-controls'>\n        <h3 id='session-label'>Session Length</h3>\n        <div\n          className='control arrow-control'\n          id='session-decrement'\n          onClick={decrement}\n        >\n          <i className='fa fa-arrow-down' />\n        </div>\n        <div className='control' id='session-length'>\n          {this.props.sessionLength}\n        </div>\n        <div\n          className='control arrow-control'\n          id='session-increment'\n          onClick={increment}\n        >\n          <i className='fa fa-arrow-up' />\n        </div>\n      </div>\n    );\n  }\n}\n\nSessionTimeControl.propTypes = {\n  sessionLength: PropTypes.number.isRequired,\n  controlMethods: PropTypes.object.isRequired\n};\n\nexport default SessionTimeControl;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nexport class BreakTimeControl extends Component {\n  render() {\n    const { increment, decrement } = this.props.controlMethods;\n\n    return (\n      <div className='length-control-container' id='break-controls'>\n        <h3 id='break-label'>Break Length</h3>\n        <div\n          className='control arrow-control'\n          id='break-decrement'\n          onClick={decrement}\n        >\n          <i className='fa fa-arrow-down' />\n        </div>\n        <div className='control' id='break-length'>\n          {this.props.breakLength}\n        </div>\n        <div\n          className='control arrow-control'\n          id='break-increment'\n          onClick={increment}\n        >\n          <i className='fa fa-arrow-up' />\n        </div>\n      </div>\n    );\n  }\n}\n\nBreakTimeControl.propTypes = {\n  breakLength: PropTypes.number.isRequired,\n  controlMethods: PropTypes.object.isRequired\n};\n\nexport default BreakTimeControl;\n","import React, { Component } from 'react';\n\nimport Timer from './Timer';\nimport TimerControl from './TimerControl';\nimport SessionTimeControl from './SessionTimeControl';\nimport BreakTimeControl from './BreakTimeControl';\n\n/*\n *  CONSTANTS\n */\nconst DEFAULT_SESSION_LENGTH = 25;\nconst DEFAULT_BREAK_LENGTH = 5;\nconst MIN_LENGTH = 1;\nconst MAX_LENGTH = 60;\n\nexport class PomodoroClockApp extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      sessionLength: DEFAULT_SESSION_LENGTH,\n      breakLength: DEFAULT_BREAK_LENGTH,\n      timeRemaining: DEFAULT_SESSION_LENGTH * 60,\n      isOnBreak: false,\n      isPaused: true\n    };\n  }\n\n  componentDidMount() {\n    this.beepClip = document.querySelector('#beep');\n    this.timer = setInterval(() => this.tick(), 1000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timer);\n  }\n\n  componentWillUpdate() {\n    if (this.state.timeRemaining <= 0) {\n      this.toggleBreak();\n    } else if (this.state.timeRemaining === 1) {\n      this.beepClip.play();\n    }\n  }\n\n  tick = () => {\n    if (this.state.isPaused) return;\n\n    this.setState({ timeRemaining: this.state.timeRemaining - 1 });\n  };\n\n  reset = () => {\n    this.beepClip.pause();\n    this.beepClip.currentTime = 0;\n\n    this.setState({\n      sessionLength: DEFAULT_SESSION_LENGTH,\n      breakLength: DEFAULT_BREAK_LENGTH,\n      timeRemaining: DEFAULT_SESSION_LENGTH * 60,\n      isOnBreak: false,\n      isPaused: true\n    });\n  };\n\n  toggleBreak = () => {\n    const isOnBreak = !this.state.isOnBreak;\n    const timeRemaining =\n      (isOnBreak ? this.state.breakLength : this.state.sessionLength) * 60;\n    this.setState({ isOnBreak, timeRemaining });\n  };\n\n  togglePause = () => {\n    const isPaused = !this.state.isPaused;\n    this.setState({ isPaused });\n  };\n\n  timerControlMethods = {\n    reset: this.reset,\n    togglePause: this.togglePause\n  };\n\n  incrementSessionLength = () => {\n    const sessionLength = Math.min(this.state.sessionLength + 1, MAX_LENGTH);\n    this.updateSessionLength(sessionLength);\n  };\n\n  decrementSessionLength = () => {\n    const sessionLength = Math.max(this.state.sessionLength - 1, MIN_LENGTH);\n    this.updateSessionLength(sessionLength);\n  };\n\n  updateSessionLength = sessionLength => {\n    if (!this.state.isPaused) return;\n    this.setState({\n      sessionLength\n    });\n    if (!this.state.isOnBreak) {\n      this.setState({ timeRemaining: sessionLength * 60 });\n    }\n  };\n\n  incrementBreakLength = () => {\n    const breakLength = Math.min(this.state.breakLength + 1, MAX_LENGTH);\n    this.updateBreakLength(breakLength);\n  };\n\n  decrementBreakLength = () => {\n    const breakLength = Math.max(this.state.breakLength - 1, MIN_LENGTH);\n    this.updateBreakLength(breakLength);\n  };\n\n  updateBreakLength = breakLength => {\n    if (!this.state.isPaused) return;\n    this.setState({\n      breakLength\n    });\n    if (this.state.isOnBreak) {\n      this.setState({ timeRemaining: breakLength * 60 });\n    }\n  };\n\n  /*\n   *  Object containers for increment/decrement methods. For convenience\n   *  when passing as properties.\n   */\n  sessionMethods = {\n    increment: this.incrementSessionLength,\n    decrement: this.decrementSessionLength\n  };\n\n  breakMethods = {\n    increment: this.incrementBreakLength,\n    decrement: this.decrementBreakLength\n  };\n\n  /**\n   * Render component\n   */\n  render() {\n    const timeRemaining = this.state.timeRemaining;\n    return (\n      <div id='app-container'>\n        <div id='app-header'>\n          <h1>Pomodoro Clock</h1>\n        </div>\n        <Timer timeRemaining={timeRemaining} isOnBreak={this.state.isOnBreak} />\n        <div id='length-controls'>\n          <BreakTimeControl\n            breakLength={this.state.breakLength}\n            controlMethods={this.breakMethods}\n          />\n          <SessionTimeControl\n            sessionLength={this.state.sessionLength}\n            controlMethods={this.sessionMethods}\n          />\n        </div>\n        <TimerControl\n          isPaused={this.state.isPaused}\n          controlMethods={this.timerControlMethods}\n        />\n      </div>\n    );\n  }\n}\n\nexport default PomodoroClockApp;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './css/main.css';\n\nimport PomodoroClockApp from './components/PomodoroClockApp';\n\nReactDOM.render(<PomodoroClockApp />, document.getElementById('root'));\n"],"sourceRoot":""}