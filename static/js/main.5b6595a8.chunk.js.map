{"version":3,"sources":["components/Timer.js","components/TimerControl.js","components/SessionTimeControl.js","components/BreakTimeControl.js","components/PomodoroClockApp.js","index.js"],"names":["Timer","_Component","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","convertTimeFormat","time","minutes","Math","floor","seconds","minutesStr","secondsStr","inherits","createClass","key","value","timerLabel","props","isOnBreak","timeRemaining","react_default","a","createElement","id","preload","src","Component","TimerControl","startStopText","isPaused","_this$props$controlMe","controlMethods","togglePause","reset","onClick","SessionTimeControl","increment","decrement","sessionLength","className","BreakTimeControl","breakLength","DEFAULT_SESSION_LENGTH","DEFAULT_BREAK_LENGTH","MIN_LENGTH","MAX_LENGTH","PomodoroClockApp","tick","state","setState","beepClip","pause","currentTime","toggleBreak","timerControlMethods","incrementSessionLength","min","updateSessionLength","decrementSessionLength","max","incrementBreakLength","updateBreakLength","decrementBreakLength","sessionMethods","breakMethods","_this2","document","querySelector","timer","setInterval","clearInterval","play","components_BreakTimeControl","components_SessionTimeControl","components_Timer","components_TimerControl","ReactDOM","render","components_PomodoroClockApp","getElementById"],"mappings":"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","file":"static/js/main.5b6595a8.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nexport class Timer extends Component {\n  /**\n   * Convert a time value from seconds to MM:SS format\n   */\n  convertTimeFormat = time => {\n    const minutes = Math.floor(time / 60);\n    const seconds = time % 60;\n    const minutesStr = minutes < 10 ? `0${minutes}` : `${minutes}`;\n    const secondsStr = seconds < 10 ? `0${seconds}` : `${seconds}`;\n    return `${minutesStr}:${secondsStr}`;\n  };\n\n  /**\n   * Render the component\n   */\n  render() {\n    const timerLabel = this.props.isOnBreak ? 'Break' : 'Session';\n    const timeRemaining = this.props.timeRemaining;\n    return (\n      <div>\n        <div id='timer-label'>\n          <h3>{timerLabel}</h3>\n        </div>\n        <div id='time-left'>{this.convertTimeFormat(timeRemaining)}</div>\n        <audio id='beep' preload='auto' src='./audio/BeepSound.wav' />\n      </div>\n    );\n  }\n}\n\nTimer.propTypes = {\n  timeRemaining: PropTypes.number.isRequired,\n  isOnBreak: PropTypes.bool.isRequired\n};\n\nexport default Timer;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nexport class TimerControl extends Component {\n  render() {\n    const startStopText = this.props.isPaused ? 'Start' : 'Stop';\n    const { togglePause, reset } = this.props.controlMethods;\n\n    return (\n      <div>\n        <button id='start_stop' onClick={togglePause}>\n          {startStopText}\n        </button>\n        <button id='reset' onClick={reset}>\n          Reset\n        </button>\n      </div>\n    );\n  }\n}\n\nTimerControl.propTypes = {\n  controlMethods: PropTypes.object.isRequired,\n  isPaused: PropTypes.bool.isRequired\n};\n\nexport default TimerControl;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nexport class SessionTimeControl extends Component {\n  render() {\n    const { increment, decrement } = this.props.controlMethods;\n\n    return (\n      <div>\n        <h3 id='session-label'>Session Length</h3>\n        <div id='session-length'>{this.props.sessionLength}</div>\n        <div id='session-increment' onClick={increment}>\n          <i className='fa fa-arrow-up' />\n        </div>\n        <div id='session-decrement' onClick={decrement}>\n          <i className='fa fa-arrow-down' />\n        </div>\n      </div>\n    );\n  }\n}\n\nSessionTimeControl.propTypes = {\n  sessionLength: PropTypes.number.isRequired,\n  controlMethods: PropTypes.object.isRequired\n};\n\nexport default SessionTimeControl;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nexport class BreakTimeControl extends Component {\n  render() {\n    const { increment, decrement } = this.props.controlMethods;\n\n    return (\n      <div>\n        <h3 id='break-label'>Break Length</h3>\n        <div id='break-length'>{this.props.breakLength}</div>\n        <div id='break-increment' onClick={increment}>\n          <i className='fa fa-arrow-up' />\n        </div>\n        <div id='break-decrement' onClick={decrement}>\n          <i className='fa fa-arrow-down' />\n        </div>\n      </div>\n    );\n  }\n}\n\nBreakTimeControl.propTypes = {\n  breakLength: PropTypes.number.isRequired,\n  controlMethods: PropTypes.object.isRequired\n};\n\nexport default BreakTimeControl;\n","import React, { Component } from 'react';\n\nimport Timer from './Timer';\nimport TimerControl from './TimerControl';\nimport SessionTimeControl from './SessionTimeControl';\nimport BreakTimeControl from './BreakTimeControl';\n\n/*\n *  CONSTANTS\n */\nconst DEFAULT_SESSION_LENGTH = 25;\nconst DEFAULT_BREAK_LENGTH = 5;\nconst MIN_LENGTH = 1;\nconst MAX_LENGTH = 60;\n\nexport class PomodoroClockApp extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      sessionLength: DEFAULT_SESSION_LENGTH,\n      breakLength: DEFAULT_BREAK_LENGTH,\n      timeRemaining: DEFAULT_SESSION_LENGTH * 60,\n      isOnBreak: false,\n      isPaused: true\n    };\n  }\n\n  componentDidMount() {\n    this.beepClip = document.querySelector('#beep');\n    this.timer = setInterval(() => this.tick(), 1000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timer);\n  }\n\n  componentWillUpdate() {\n    if (this.state.timeRemaining <= 0) {\n      this.toggleBreak();\n    } else if (this.state.timeRemaining === 1) {\n      this.beepClip.play();\n    }\n  }\n\n  tick = () => {\n    if (this.state.isPaused) return;\n\n    this.setState({ timeRemaining: this.state.timeRemaining - 1 });\n  };\n\n  reset = () => {\n    this.beepClip.pause();\n    this.beepClip.currentTime = 0;\n\n    this.setState({\n      sessionLength: DEFAULT_SESSION_LENGTH,\n      breakLength: DEFAULT_BREAK_LENGTH,\n      timeRemaining: DEFAULT_SESSION_LENGTH * 60,\n      isOnBreak: false,\n      isPaused: true\n    });\n  };\n\n  toggleBreak = () => {\n    const isOnBreak = !this.state.isOnBreak;\n    const timeRemaining =\n      (isOnBreak ? this.state.breakLength : this.state.sessionLength) * 60;\n    this.setState({ isOnBreak, timeRemaining });\n  };\n\n  togglePause = () => {\n    const isPaused = !this.state.isPaused;\n    this.setState({ isPaused });\n  };\n\n  timerControlMethods = {\n    reset: this.reset,\n    togglePause: this.togglePause\n  };\n\n  incrementSessionLength = () => {\n    const sessionLength = Math.min(this.state.sessionLength + 1, MAX_LENGTH);\n    this.updateSessionLength(sessionLength);\n  };\n\n  decrementSessionLength = () => {\n    const sessionLength = Math.max(this.state.sessionLength - 1, MIN_LENGTH);\n    this.updateSessionLength(sessionLength);\n  };\n\n  updateSessionLength = sessionLength => {\n    if (!this.state.isPaused) return;\n    this.setState({\n      sessionLength\n    });\n    if (!this.state.isOnBreak) {\n      this.setState({ timeRemaining: sessionLength * 60 });\n    }\n  };\n\n  incrementBreakLength = () => {\n    const breakLength = Math.min(this.state.breakLength + 1, MAX_LENGTH);\n    this.updateBreakLength(breakLength);\n  };\n\n  decrementBreakLength = () => {\n    const breakLength = Math.max(this.state.breakLength - 1, MIN_LENGTH);\n    this.updateBreakLength(breakLength);\n  };\n\n  updateBreakLength = breakLength => {\n    if (!this.state.isPaused) return;\n    this.setState({\n      breakLength\n    });\n    if (this.state.isOnBreak) {\n      this.setState({ timeRemaining: breakLength * 60 });\n    }\n  };\n\n  /*\n   *  Object containers for increment/decrement methods. For convenience\n   *  when passing as properties.\n   */\n  sessionMethods = {\n    increment: this.incrementSessionLength,\n    decrement: this.decrementSessionLength\n  };\n\n  breakMethods = {\n    increment: this.incrementBreakLength,\n    decrement: this.decrementBreakLength\n  };\n\n  /**\n   * Render component\n   */\n  render() {\n    const timeRemaining = this.state.timeRemaining;\n    return (\n      <div>\n        <BreakTimeControl\n          breakLength={this.state.breakLength}\n          controlMethods={this.breakMethods}\n        />\n        <SessionTimeControl\n          sessionLength={this.state.sessionLength}\n          controlMethods={this.sessionMethods}\n        />\n        <Timer timeRemaining={timeRemaining} isOnBreak={this.state.isOnBreak} />\n        <TimerControl\n          isPaused={this.state.isPaused}\n          controlMethods={this.timerControlMethods}\n        />\n      </div>\n    );\n  }\n}\n\nexport default PomodoroClockApp;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './css/main.css';\n\nimport PomodoroClockApp from './components/PomodoroClockApp';\n\nReactDOM.render(<PomodoroClockApp />, document.getElementById('root'));\n"],"sourceRoot":""}