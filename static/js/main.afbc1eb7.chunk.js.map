{"version":3,"sources":["components/Timer.js","components/TimerControl.js","components/SessionTimeControl.js","components/BreakTimeControl.js","components/PomodoroClockApp.js","index.js"],"names":["Timer","_Component","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","convertTimeFormat","time","minutes","Math","floor","seconds","minutesStr","secondsStr","inherits","createClass","key","value","timeLeft","document","querySelector","props","timeRemaining","warningThreshold","classList","add","contains","remove","timerLabel","isOnBreak","react_default","a","createElement","id","preload","src","Component","TimerControl","startStopText","isPaused","startStopIconClass","_this$props$controlMe","controlMethods","togglePause","reset","className","onClick","SessionTimeControl","increment","decrement","sessionLength","BreakTimeControl","breakLength","DEFAULT_WARNING_THRESHOLD","DEFAULT_SESSION_LENGTH","DEFAULT_BREAK_LENGTH","MIN_LENGTH","MAX_LENGTH","PomodoroClockApp","tick","state","setState","beepClip","pause","currentTime","toggleBreak","timerControlMethods","incrementSessionLength","min","updateSessionLength","decrementSessionLength","max","incrementBreakLength","updateBreakLength","decrementBreakLength","sessionMethods","breakMethods","_this2","timer","setInterval","clearInterval","play","components_Timer","components_BreakTimeControl","components_SessionTimeControl","components_TimerControl","ReactDOM","render","components_PomodoroClockApp","getElementById"],"mappings":"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","file":"static/js/main.afbc1eb7.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nexport class Timer extends Component {\n  componentDidUpdate() {\n    // Change timer color when below threshold\n    const timeLeft = document.querySelector('#time-left');\n    if (this.props.timeRemaining < this.props.warningThreshold * 60) {\n      timeLeft.classList.add('warning');\n    } else if (timeLeft.classList.contains('warning')) {\n      timeLeft.classList.remove('warning');\n    }\n  }\n\n  /**\n   * Convert a time value from seconds to MM:SS format\n   */\n  convertTimeFormat = time => {\n    const minutes = Math.floor(time / 60);\n    const seconds = time % 60;\n    const minutesStr = minutes < 10 ? `0${minutes}` : `${minutes}`;\n    const secondsStr = seconds < 10 ? `0${seconds}` : `${seconds}`;\n    return `${minutesStr}:${secondsStr}`;\n  };\n\n  /**\n   * Render the component\n   */\n  render() {\n    const timerLabel = this.props.isOnBreak ? 'Break' : 'Session';\n    const timeRemaining = this.props.timeRemaining;\n\n    return (\n      <div id='timer-container'>\n        <div id='timer-label'>\n          <h3>{timerLabel}</h3>\n        </div>\n        <div id='time-left'>{this.convertTimeFormat(timeRemaining)}</div>\n        <audio id='beep' preload='auto' src='./audio/BeepSound.wav' />\n      </div>\n    );\n  }\n}\n\nTimer.propTypes = {\n  timeRemaining: PropTypes.number.isRequired,\n  isOnBreak: PropTypes.bool.isRequired,\n  warningThreshold: PropTypes.number\n};\n\nexport default Timer;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nexport class TimerControl extends Component {\n  render() {\n    const startIconClassName = 'far fa-play-circle';\n    const stopIconClassName = 'far fa-stop-circle';\n    const resetIconClassName = 'fa fa-sync btn-icon';\n\n    const startStopText = this.props.isPaused ? 'Start ' : 'Stop ';\n    const startStopIconClass =\n      (this.props.isPaused ? startIconClassName : stopIconClassName) +\n      ' btn-icon';\n\n    const { togglePause, reset } = this.props.controlMethods;\n\n    return (\n      <div id='timer-controls'>\n        <button\n          className='timer-control-button'\n          id='start_stop'\n          onClick={togglePause}\n        >\n          {startStopText}\n          <i className={startStopIconClass} />\n        </button>\n        <button className='timer-control-button' id='reset' onClick={reset}>\n          Reset <i className={resetIconClassName} />\n        </button>\n      </div>\n    );\n  }\n}\n\nTimerControl.propTypes = {\n  controlMethods: PropTypes.object.isRequired,\n  isPaused: PropTypes.bool.isRequired\n};\n\nexport default TimerControl;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nexport class SessionTimeControl extends Component {\n  render() {\n    const { increment, decrement } = this.props.controlMethods;\n\n    return (\n      <div className='length-control-container' id='session-controls'>\n        <h3 id='session-label'>Session Length</h3>\n        <div\n          className='control arrow-control'\n          id='session-decrement'\n          onClick={decrement}\n        >\n          <i className='fa fa-arrow-down' />\n        </div>\n        <div className='control' id='session-length'>\n          {this.props.sessionLength}\n        </div>\n        <div\n          className='control arrow-control'\n          id='session-increment'\n          onClick={increment}\n        >\n          <i className='fa fa-arrow-up' />\n        </div>\n      </div>\n    );\n  }\n}\n\nSessionTimeControl.propTypes = {\n  sessionLength: PropTypes.number.isRequired,\n  controlMethods: PropTypes.object.isRequired\n};\n\nexport default SessionTimeControl;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nexport class BreakTimeControl extends Component {\n  render() {\n    const { increment, decrement } = this.props.controlMethods;\n\n    return (\n      <div className='length-control-container' id='break-controls'>\n        <h3 id='break-label'>Break Length</h3>\n        <div\n          className='control arrow-control'\n          id='break-decrement'\n          onClick={decrement}\n        >\n          <i className='fa fa-arrow-down' />\n        </div>\n        <div className='control' id='break-length'>\n          {this.props.breakLength}\n        </div>\n        <div\n          className='control arrow-control'\n          id='break-increment'\n          onClick={increment}\n        >\n          <i className='fa fa-arrow-up' />\n        </div>\n      </div>\n    );\n  }\n}\n\nBreakTimeControl.propTypes = {\n  breakLength: PropTypes.number.isRequired,\n  controlMethods: PropTypes.object.isRequired\n};\n\nexport default BreakTimeControl;\n","import React, { Component } from 'react';\n\nimport Timer from './Timer';\nimport TimerControl from './TimerControl';\nimport SessionTimeControl from './SessionTimeControl';\nimport BreakTimeControl from './BreakTimeControl';\n\n/*\n *  CONSTANTS\n */\nconst DEFAULT_WARNING_THRESHOLD = 1;\nconst DEFAULT_SESSION_LENGTH = 25;\nconst DEFAULT_BREAK_LENGTH = 5;\nconst MIN_LENGTH = 1;\nconst MAX_LENGTH = 60;\n\nexport class PomodoroClockApp extends Component {\n  constructor(props) {\n    super(props);\n\n    this.warningThreshold = DEFAULT_WARNING_THRESHOLD;\n\n    this.state = {\n      sessionLength: DEFAULT_SESSION_LENGTH,\n      breakLength: DEFAULT_BREAK_LENGTH,\n      timeRemaining: DEFAULT_SESSION_LENGTH * 60,\n      isOnBreak: false,\n      isPaused: true\n    };\n  }\n\n  componentDidMount() {\n    this.beepClip = document.querySelector('#beep');\n    this.timer = setInterval(() => this.tick(), 1000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timer);\n  }\n\n  componentWillUpdate() {\n    if (this.state.timeRemaining <= 0) {\n      this.toggleBreak();\n    } else if (this.state.timeRemaining === 1) {\n      this.beepClip.play();\n    }\n  }\n\n  tick = () => {\n    if (this.state.isPaused) return;\n\n    this.setState({ timeRemaining: this.state.timeRemaining - 1 });\n  };\n\n  reset = () => {\n    this.beepClip.pause();\n    this.beepClip.currentTime = 0;\n\n    this.setState({\n      sessionLength: DEFAULT_SESSION_LENGTH,\n      breakLength: DEFAULT_BREAK_LENGTH,\n      timeRemaining: DEFAULT_SESSION_LENGTH * 60,\n      isOnBreak: false,\n      isPaused: true\n    });\n  };\n\n  toggleBreak = () => {\n    const isOnBreak = !this.state.isOnBreak;\n    const timeRemaining =\n      (isOnBreak ? this.state.breakLength : this.state.sessionLength) * 60;\n    this.setState({ isOnBreak, timeRemaining });\n  };\n\n  togglePause = () => {\n    const isPaused = !this.state.isPaused;\n    this.setState({ isPaused });\n  };\n\n  timerControlMethods = {\n    reset: this.reset,\n    togglePause: this.togglePause\n  };\n\n  incrementSessionLength = () => {\n    const sessionLength = Math.min(this.state.sessionLength + 1, MAX_LENGTH);\n    this.updateSessionLength(sessionLength);\n  };\n\n  decrementSessionLength = () => {\n    const sessionLength = Math.max(this.state.sessionLength - 1, MIN_LENGTH);\n    this.updateSessionLength(sessionLength);\n  };\n\n  updateSessionLength = sessionLength => {\n    if (!this.state.isPaused) return;\n    this.setState({\n      sessionLength\n    });\n    if (!this.state.isOnBreak) {\n      this.setState({ timeRemaining: sessionLength * 60 });\n    }\n  };\n\n  incrementBreakLength = () => {\n    const breakLength = Math.min(this.state.breakLength + 1, MAX_LENGTH);\n    this.updateBreakLength(breakLength);\n  };\n\n  decrementBreakLength = () => {\n    const breakLength = Math.max(this.state.breakLength - 1, MIN_LENGTH);\n    this.updateBreakLength(breakLength);\n  };\n\n  updateBreakLength = breakLength => {\n    if (!this.state.isPaused) return;\n    this.setState({\n      breakLength\n    });\n    if (this.state.isOnBreak) {\n      this.setState({ timeRemaining: breakLength * 60 });\n    }\n  };\n\n  /*\n   *  Object containers for increment/decrement methods. For convenience\n   *  when passing as properties.\n   */\n  sessionMethods = {\n    increment: this.incrementSessionLength,\n    decrement: this.decrementSessionLength\n  };\n\n  breakMethods = {\n    increment: this.incrementBreakLength,\n    decrement: this.decrementBreakLength\n  };\n\n  /**\n   * Render component\n   */\n  render() {\n    const timeRemaining = this.state.timeRemaining;\n    return (\n      <div id='app-container'>\n        <div id='app-header'>\n          <h1>Pomodoro Clock</h1>\n        </div>\n        <Timer\n          timeRemaining={timeRemaining}\n          isOnBreak={this.state.isOnBreak}\n          warningThreshold={this.warningThreshold}\n        />\n        <div id='length-controls'>\n          <BreakTimeControl\n            breakLength={this.state.breakLength}\n            controlMethods={this.breakMethods}\n          />\n          <SessionTimeControl\n            sessionLength={this.state.sessionLength}\n            controlMethods={this.sessionMethods}\n          />\n        </div>\n        <TimerControl\n          isPaused={this.state.isPaused}\n          controlMethods={this.timerControlMethods}\n        />\n      </div>\n    );\n  }\n}\n\nexport default PomodoroClockApp;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './css/main.css';\n\nimport PomodoroClockApp from './components/PomodoroClockApp';\n\nReactDOM.render(<PomodoroClockApp />, document.getElementById('root'));\n"],"sourceRoot":""}